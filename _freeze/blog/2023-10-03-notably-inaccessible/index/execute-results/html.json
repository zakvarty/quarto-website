{
  "hash": "538e9ccef79e85a5a6c54f8634019fb4",
  "result": {
    "markdown": "---\ntitle: \"Notably Inaccessible\"\ndescription: |\n    A data driven investigation into the (in)accessibility of data science notebooks.\ndate: \"2023-10-03\"\ncategories:\n  - workflows\n  - data science\n  - computing\n  - accessibility\n  - reading summary\nimage: notably-inaccessible-flowchart.png\nimage-alt: \"Flow chart showing the stages of preprocessing and analysis used by Potluri et al to quantify data science notebook accessibility.\"\ndraft: false\nfreeze: true\nappendix-style: plain #(default, plain, none)\nbibliography: ../library.bib\ncitation: false\n---\n\n::: {.cell}\n\n:::\n\n\n## Reading Summary\n\n`potluri2023notably` [@potluri2023notably]\n\n**Title:** _Notably Inaccessible - Data driven understanding of data science notebook (in)accessibility. {ArXiv preprint, 2023} (19 pages)._\n\n**Authors:** _Venkatesh Potluri, Sudheesh Singanamalla, Nussara Tieanklin and Jennifer Mankoff. (University of Washington)_\n\n**Key words:** _data science_, _workflows_, _computing_, _accessibility_. \n\n::: medium_right\n<figure><img src=\"notably-inaccessible-flowchart.png\" alt=\"Flow chart showing the stages of preprocessing and analysis used by Potluri et al to quantify data science notebook accessibility.\" style=\"border-radius: 3%;\"/></figure>\n:::\n\nIn this paper, the authors explore accessibility of literate programming approaches to blind and visually impaired users, both for the authoring and consumption of data science notebooks. \nThey do this by conducting the first large-scale, empirical investigation into how notebooks are created and used _in the wild_, focusing strongly on Python-based analyses collated by @rule2018exploration. \nThis study is of interest data scientists and IDE developers who care about improving the accessibility of our workflows. \nThe key findings suggest that the most immediate, individual impact can be made through consistent use of existing HTML tools, for example by providing alt-text for all generated figures and by using heading tags to facilitate document navigation.\n\n\n\n## Notes\n\n- The study makes a holistic assessment of the use of notebooks, investigating accessibility of:\n\n  - the integrated development environments used when authoring,\n  - the analysis and outputs performed within the notebooks,\n  - how those are presented in html format.\n\n-  \" @elavsky2022accessible extend web accessibility guidelines to make data visualizations accessible.\" - Potential further reading. \n\n- [pa11y](https://pa11y.org/) accessibility scanning infrastructure, interesting for further investigation. I think this was one of the topics in a previous Tidy Tuesday visualisation challenge. \n\n- \"Only studying notebooks that are presentation-ready assumes that BVI people's involvement only as consumers of these notebooks and limits discovery of the extent of notebook accessibility problems.\" - Yes! Strongly agree. \n\n- The authors use \"a fully connected conventional neural network combined with a Fisher-Vector Convolution Neural Network, pre-trained on the [DocFigure](https://ieeexplore.ieee.org/document/8892905) data set\" to classify the chart types in the notebooks. A replication of this might be a fun exercise / mini-project in deep learning. \n\n- `nbconvert` is a pythonic, more focused version of pandoc. \n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}